/*9
1 2 3 2 1 1 1 1 1
3*

3 3 3 1 1 1 1 my   |   corrected
3 3 3 2 1 1 1 ans  | 


10
5 4 1 1 2 3 1 1 1 1
5

ans 5 4 3 3 3 3
*/

//#define git getchar()
#define git getchar_unlocked()

# include <iostream>
# include <fstream>
# include <sstream>
# include <algorithm>
# include <cstdio>
# include <cmath>
# include <numeric>
# include <cstdlib>
# include <cstring>
# include <vector>
# include <list>
# include <set>
# include <map>
# include <stack>
# include <queue>
# include <cctype>
# include <climits>
# include <complex>

using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> pii;
typedef vector<int> vi;

#define GI ({int t;scanf("%d",&t);t;})
#define REP(i,a,b) for(int i=a;i<b;i++)
#define ALL(v) (v).begin(),(v).end()
#define TR(i,x) for(typeof(x.begin()) i=x.begin();i!=x.end();i++)
#define bitcount(x) __builtin_popcount(x)
#define pb push_back
#define mp make_pair
#define EPS (double)(1e-9)
#define INF 1000000000
#define MOD 1000000007
#define PI (double)(3.141592653589793)

inline int ni()
{
	register int r=0,c;
	for(c=git;c<=32;c=git);
	if(c=='-') 
		return -ni();
	for(;c>32;r=(r<<1)+(r<<3)+c-'0',c=git);
	return r;
}
int a[100000],xa[100000],max_i_list[100000];
main()
{
      register int n,i,up,low,best_i,best_v,k,j,uni_best_v,uni_i,max_i=0;
      n=ni();
      for(i=0;i<n;i++)a[i]=ni();
      k=ni();
      best_i=0;best_v=a[0];
      for(i=1;i<k;i++)if(a[i]>=best_v){
                                      best_v=a[i];
                                      best_i=i;
                                      }
      uni_best_v=best_v;
      uni_i=best_i;
      for(i=k;i<n;i++)if(a[i]>uni_best_v){
                                           uni_best_v=a[i];
                                           uni_i=i;
                                           }
      max_i_list[0]=uni_i;
      for(i=uni_i+1;i<n;i++)if(a[i]==uni_best_v){
                                           max_i_list[++max_i]=i;
                                           }
      
      
      
      for(low=0;low<max_i;low++)
      {
      
               register int lower_b=-1>max_i_list[low]-k?-1:max_i_list[low]-k;
               for(i=uni_i;i>lower_b+1;i--)
                  {
                           xa[i]=uni_best_v;
                  }
      }
      
      
      if(xa[0]==0)
                  {
                         xa[0]=best_v;
                  }
      for(low=1,up=k+1;up<=n;up++,low++)
      {
            if(xa[low]==0)
            {    
                if(best_i>=low)
                {
                     if(best_v<=a[up-1])
                          {
                                  best_v=a[up-1];
                                  best_i=up-1;
                          }
                }
                else if(best_v<=a[up-1]-1)
                {
                     best_i=up-1;best_v=a[up-1];
                }
                else{
                     best_i=low;
                     best_v=a[low];
                     
                     
                     for(j=low+1;j<up;j++)
                     {
                            if(a[j]>=best_v){
                                             best_v=a[j];
                                             best_i=j;
                                             }
                     }
                     } 
                xa[low]=best_v;
            }                              
      }
      for(i=0;i<n-k;i++){
                          printf("%d ",xa[i]);
                          }
      printf("%d",xa[n-k]);
      //scanf("%*d");
      return 0;
}

