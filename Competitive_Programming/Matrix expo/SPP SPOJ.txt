#include<stdio.h>
typedef long long L;
L *basic;

//matrix expo and linear modeling 

L mod=1000000000;//remember to change here


L powerS(L a,L p)
{
       if(p<2)return a;
       L ans=powerS(a,p/2);
       ans=(ans*ans)%mod;
       if(p&1)ans=(a*ans)%mod;
       return ans;
}

L multiplyV(L *v,L *m,int size)
{
     L sum=0;
     int i,j;
     for(i=0;i<size;i++)
     {
            sum+=(m[i]*v[size-i-1])%mod;
            
     }
     sum%=mod;
     return sum;
}

void multiply(L *x,L *y,int size)
{
     int i,j,k;
     L *f;
     f=new L[size*size];
     for(i=0;i<size;i++)
        {
            for(j=0;j<size;j++)
            {
                f[i*size+j]=0;
                for(k=0;k<size;k++)
                    f[i*size+j]+=(x[i*size+k]*y[k*size+j])%mod;
                
            }
            
        }
     for(i=0;i<size*size;i++)x[i]=f[i]%mod;
     
     //delete f;
     
}
void power(L *x,L p,int size)
{
     if(p>1)
     {
            int i;
            L *f;
            f=new L[size*size];
            for(i=0;i<size*size;i++)f[i]=x[i];
            power(f,p/2,size);
            multiply(f,f,size);
            if(p%2){
                    multiply(f,basic,size);
                    }
            for(i=0;i<size*size;i++)x[i]=f[i];
     }
}



main()
{
      int t,k,i,size,j;
      scanf("%d",&t);
      L m,n;
      L zero=(long long)0;
      while(t--)
      {
                L B[16]={zero},C[16]={zero},x[300]={zero},S[16]={zero},V[17],tx[400];
                scanf("%d",&k);
                for(i=0;i<k;i++){scanf("%lld",&B[i]);S[i]=B[i]%mod;if(i>0)S[i]=(S[i]+S[i-1])%mod;}
                for(i=0;i<k;i++)scanf("%lld",&C[i]);
                scanf("%lld%lld%lld",&m,&n,&mod);
                {
                        size=k+1;
                        basic=new L[size*size];
                        for(i=0;i<size*size;i++)x[i]=basic[i]=0;
                        
                        
                        for(i=0;i<k;i++)x[0*size+i+1]=basic[0*size+i+1]=C[i];
                        
                        
                        for(i=0;i<k;i++)x[1*size+i+1]=basic[1*size+i+1]=C[i];
                        
                        x[0]=basic[0]=(long long)1;
                        for(i=2;i<=k;i++)x[i*size+i-1]=basic[i*size+i-1]=(long long)1;
                        for(i=0;i<k;i++)V[i]=B[i];
                        V[k]=S[k-1];
                        
                        //for(i=0;i<=k;i++){
                        //for(j=0;j<=k;j++)printf("%lld ",x[i*size+j]);puts("");}
                        //puts("");for(i=0;i<=k;i++)printf("%lld ",V[i]);puts("");puts("");
                        
                        L a1,a2;
                        
                        
                        
                        if(n<=k){a1=(n==0)?0:S[n-1];a2=(m==1)?0:S[m-2];
                                 printf("%lld\n",(a1-a2+mod)%mod);
                                 }
                        else if(m-1<=k){
                             a2=(m==1)?0:S[m-2];
                             power(x,n-k,size);
                             a1=multiplyV(V,x,size)%mod;
                             
                             //for(i=0;i<=k;i++){
                        //for(j=0;j<=k;j++)printf("%lld ",x[i*size+j]);puts("");}
                        //for(i=0;i<=k;i++)printf("%lld ",V[i]);puts("");
                             
                             printf("%lld\n",(a1-a2+mod)%mod);
                             }
                        else{//for(i=0;i<size*size;i++)tx[i]=x[i];
                        
                             
                             
                             
                             //for(i=0;i<size;i++)
                             //{for(j=0;j<size;j++)printf("%lld:%lld ",x[i*size+j],basic[i*size+j]);puts("");}
                             
                             
                        
                             power(x,n-k,size);
                             a1=multiplyV(V,x,size)%mod;
                             
                             for(i=0;i<size*size;i++)x[i]=basic[i];
                             
                             
                             power(x,m-1-k,size);
                             a2=multiplyV(V,x,size)%mod;
                             printf("%lld\n",(a1-a2+mod)%mod);
                             }
                        
                        
                }
                
      }
      return 0;
}

